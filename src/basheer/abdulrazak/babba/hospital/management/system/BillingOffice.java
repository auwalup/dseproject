 /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basheer.abdulrazak.babba.hospital.management.system;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Basheer
 */
public class BillingOffice extends javax.swing.JFrame {
 int balance;
    /**
     * Creates new form BillingOffice
     */
    public BillingOffice() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        amount = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        pay = new javax.swing.JButton();
        cmdPatientId = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Billing Record");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Patient Name");

        jLabel2.setText("Patient ID");

        jLabel3.setText("Total Bill of Hospitalization");

        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        pay.setText("Pay");
        pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payActionPerformed(evt);
            }
        });

        cmdPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPatientIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmdPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(pay)
                        .addGap(49, 49, 49)
                        .addComponent(cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(save)
                        .addGap(31, 31, 31))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmdPatientId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay)
                    .addComponent(cancel)
                    .addComponent(save))
                .addGap(58, 58, 58))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    
    public void pay(){
    int amount=Integer.parseInt(this.amount.getText());
       String id=(String) this.cmdPatientId.getSelectedItem();
       String sql="SELECT total_hospitalisation_bill FROM billing_office WHERE id_patient='"+id+"'";
       String p="NOT PAID";
     try {
         Database.DB.open();
         Database.DB.connection.setAutoCommit(false);
         rs=Database.DB.statement.executeQuery(sql);
         rs.next();
         balance=Integer.parseInt(rs.getString("total_hospitalisation_bill"));
        if(amount<=balance){
		balance-=amount;
            if(balance==0)
                 p="PAID";
        }
       String sl="UPDATE billing_office SET payment_status='"+p+"',total_hospitalisation_bill='"+balance+"' WHERE id_patient='"+id+"'";
       Database.DB.statement.execute(sl);
       Database.DB.connection.commit();
       JOptionPane.showMessageDialog(null,"PAYMENT SUCCESSFUL","SUCCESSFUL",JOptionPane.INFORMATION_MESSAGE);
     } catch (SQLException ex) {
         Logger.getLogger(BillingOffice.class.getName()).log(Level.SEVERE, null, ex);
     }
}public void getcost(){
    String sql="SELECT consultancy,costs FROM cost";
    
}
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
      String name=this.txtname.getText(),id=(String) this.cmdPatientId.getSelectedItem(); 
      String amount=this.amount.getText();
      String test="";
      String pay=this.pay.getText();
      String sql="INSERT INTO billing_office(`id_patient`,`patient_name`,`total_hospitalisation_bill`,`payment_status`,`consultancy`)"
        +"VALUES('"+id+"','"+name+"','"+amount+"','NOT PAID',)";
     try {
         Database.DB.statement.execute(sql);
 JOptionPane.showMessageDialog(this, "bill record added sucessfully", "Success", JOptionPane.INFORMATION_MESSAGE);
     } catch (SQLException ex) {
          JOptionPane.showMessageDialog(this, "ERROR WHILE ADDING BILL RECORD", "ERROR", JOptionPane.INFORMATION_MESSAGE);
         Logger.getLogger(BillingOffice.class.getName()).log(Level.SEVERE, null, ex);
     }
    
    }//GEN-LAST:event_saveActionPerformed
  
    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
System.out.println("Goodbye");
dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_cancelActionPerformed

    private void amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountActionPerformed

    private void payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payActionPerformed
       pay();
       Database.DB.open();
     try {
         int mr_id;
         ResultSet result = Database.DB.statement.executeQuery("SELECT * FROM bill_info WHERE ammount_paid IS NULL AND id_patient = "+cmdPatientId.getSelectedItem());
         if(result != null)   
            while(result.next()){
                mr_id = result.getInt("mr_id");
                String sql = "UPDATE mr_consultancy SET ammount_paid = "
                    + "(SELECT price FROM consultancy_type WHERE mr_consultancy.consultancy_type_type_id = consultancy_type.type_id)"
                    + " WHERE medicalreport_mr_id = "+mr_id;
               Database.DB.statement.execute(sql);
            }
// TODO add your handling code here:
     } catch (SQLException ex) {
         if(ex.getErrorCode()!=0)
         Logger.getLogger(BillingOffice.class.getName()).log(Level.SEVERE, null, ex);
     }
    }//GEN-LAST:event_payActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
 try {
            // TODO add your handling code here:
            Database.DB.open();
            ResultSet result = Database.DB.statement.executeQuery("SELECT DISTINCT id_patient FROM bill_info WHERE ammount_paid IS NULL");
                while(result.next()){
                    cmdPatientId.addItem(result.getString("id_patient"));
                }
            
        } catch (SQLException ex) {
            if(ex.getErrorCode()!=0)
           Logger.getLogger(BillingOffice.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void cmdPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPatientIdActionPerformed
        // TODO add your handling code here:
          int theid=Integer.parseInt(String.valueOf(cmdPatientId.getSelectedItem()));
    try {
            // TODO add your handling code here:
            ResultSet result = Database.DB.statement.executeQuery("SELECT SUM(`price`) AS `cost` FROM bill_info WHERE id_patient="+theid+" AND ammount_paid is null");
            if(result != null){
                 if(result.next()){
                     String g=result.getString("cost");
                     amount.setText(g);
                 }
            }
        } catch (SQLException ex) {
            Logger.getLogger(BillingOffice.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_cmdPatientIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BillingOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BillingOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BillingOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BillingOffice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BillingOffice().setVisible(true);
            }
        });
    }
ResultSet rs=null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amount;
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox<String> cmdPatientId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton pay;
    private javax.swing.JButton save;
    private javax.swing.JTextField txtname;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basheer.abdulrazak.babba.hospital.management.system;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Basheer
 */
public class AddPatient extends javax.swing.JFrame {

    /**
     * Creates new form AddPatient
     */
    public AddPatient() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        day = new javax.swing.JComboBox<>();
        month = new javax.swing.JComboBox<>();
        year = new javax.swing.JComboBox<>();
        gender = new javax.swing.JComboBox<>();
        address = new javax.swing.JTextField();
        day1 = new javax.swing.JComboBox<>();
        month1 = new javax.swing.JComboBox<>();
        year1 = new javax.swing.JComboBox<>();
        day2 = new javax.swing.JComboBox<>();
        month2 = new javax.swing.JComboBox<>();
        year2 = new javax.swing.JComboBox<>();
        save = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        bloodgroup = new javax.swing.JComboBox<>();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Patient Record");

        jLabel1.setText("Name");

        jLabel3.setText("DATE OF BIRTH");

        jLabel4.setText("Gender");

        jLabel5.setText("Address");

        jLabel6.setText("DATE OF ADD.");

        jLabel8.setText("Date OF DISCHARGE");

        day.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayActionPerformed(evt);
            }
        });

        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });

        year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "\"1900\"", "\"1901\"", "\"1902\"", "\"1903\"", "\"1904\"", "\"1905\"", "\"1906\"", "\"1907\"", "\"1908\"", "\"1909\"", "\"1910\"", "\"1911\"", "\"1912\"", "\"1913\"", "\"1914\"", "\"1915\"", "\"1916\"", "\"1917\"", "\"1918\"", "\"1919\"", "\"1920\"", "\"1921\"", "\"1922\"", "\"1923\"", "\"1924\"", "\"1925\"", "\"1926\"", "\"1927\"", "\"1928\"", "\"1929\"", "\"1930\"", "\"1931\"", "\"1932\"", "\"1933\"", "\"1934\"", "\"1935\"", "\"1936\"", "\"1937\"", "\"1938\"", "\"1939\"", "\"1940\"", "\"1941\"", "\"1942\"", "\"1943\"", "\"1944\"", "\"1945\"", "\"1946\"", "\"1947\"", "\"1948\"", "\"1949\"", "\"1950\"", "\"1951\"", "\"1952\"", "\"1953\"", "\"1954\"", "\"1955\"", "\"1956\"", "\"1957\"", "\"1958\"", "\"1959\"", "\"1960\"", "\"1961\"", "\"1962\"", "\"1963\"", "\"1964\"", "\"1965\"", "\"1966\"", "\"1967\"", "\"1968\"", "\"1969\"", "\"1970\"", "\"1971\"", "\"1972\"", "\"1973\"", "\"1974\"", "\"1975\"", "\"1976\"", "\"1977\"", "\"1978\"", "\"1979\"", "\"1980\"", "\"1981\"", "\"1982\"", "\"1983\"", "\"1984\"", "\"1985\"", "\"1986\"", "\"1987\"", "\"1988\"", "\"1989\"", "\"1990\"", "\"1991\"", "\"1992\"", "\"1993\"", "\"1994\"", "\"1995\"", "\"1996\"", "\"1997\"", "\"1998\"", "\"1999\"", "\"2000\"", "\"2001\"", "\"2002\"", "\"2003\"", "\"2004\"", "\"2005\"", "\"2006\"", "\"2007\"", "\"2008\"", "\"2009\"", "\"2010\"", "\"2011\"", "\"2012\"", "\"2013\"", "\"2014\"", "\"2015\"", "\"2016\"", "\"2017\"", "\"2018\"", "\"2019\"", "\"2020\"", "\"2021\"", "\"2022\"", "\"2023\"", "\"2024\"", "\"2025\"", "\"2026\"", "\"2027\"", "\"2028\"", "\"2029\"", "\"2030\"", "\"2031\"", "\"2032\"", "\"2033\"", "\"2034\"", "\"2035\"", "\"2036\"", "\"2037\"", "\"2038\"", "\"2039\"", "\"2040\"", "\"2041\"", "\"2042\"", "\"2043\"", "\"2044\"", "\"2045\"", "\"2046\"", "\"2047\"", "\"2048\"", "\"2049\"", "\"2050\"})" }));
        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        day1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        month1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        year1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "\"1900\"", "\"1901\"", "\"1902\"", "\"1903\"", "\"1904\"", "\"1905\"", "\"1906\"", "\"1907\"", "\"1908\"", "\"1909\"", "\"1910\"", "\"1911\"", "\"1912\"", "\"1913\"", "\"1914\"", "\"1915\"", "\"1916\"", "\"1917\"", "\"1918\"", "\"1919\"", "\"1920\"", "\"1921\"", "\"1922\"", "\"1923\"", "\"1924\"", "\"1925\"", "\"1926\"", "\"1927\"", "\"1928\"", "\"1929\"", "\"1930\"", "\"1931\"", "\"1932\"", "\"1933\"", "\"1934\"", "\"1935\"", "\"1936\"", "\"1937\"", "\"1938\"", "\"1939\"", "\"1940\"", "\"1941\"", "\"1942\"", "\"1943\"", "\"1944\"", "\"1945\"", "\"1946\"", "\"1947\"", "\"1948\"", "\"1949\"", "\"1950\"", "\"1951\"", "\"1952\"", "\"1953\"", "\"1954\"", "\"1955\"", "\"1956\"", "\"1957\"", "\"1958\"", "\"1959\"", "\"1960\"", "\"1961\"", "\"1962\"", "\"1963\"", "\"1964\"", "\"1965\"", "\"1966\"", "\"1967\"", "\"1968\"", "\"1969\"", "\"1970\"", "\"1971\"", "\"1972\"", "\"1973\"", "\"1974\"", "\"1975\"", "\"1976\"", "\"1977\"", "\"1978\"", "\"1979\"", "\"1980\"", "\"1981\"", "\"1982\"", "\"1983\"", "\"1984\"", "\"1985\"", "\"1986\"", "\"1987\"", "\"1988\"", "\"1989\"", "\"1990\"", "\"1991\"", "\"1992\"", "\"1993\"", "\"1994\"", "\"1995\"", "\"1996\"", "\"1997\"", "\"1998\"", "\"1999\"", "\"2000\"", "\"2001\"", "\"2002\"", "\"2003\"", "\"2004\"", "\"2005\"", "\"2006\"", "\"2007\"", "\"2008\"", "\"2009\"", "\"2010\"", "\"2011\"", "\"2012\"", "\"2013\"", "\"2014\"", "\"2015\"", "\"2016\"", "\"2017\"", "\"2018\"", "\"2019\"", "\"2020\"", "\"2021\"", "\"2022\"", "\"2023\"", "\"2024\"", "\"2025\"", "\"2026\"", "\"2027\"", "\"2028\"", "\"2029\"", "\"2030\"", "\"2031\"", "\"2032\"", "\"2033\"", "\"2034\"", "\"2035\"", "\"2036\"", "\"2037\"", "\"2038\"", "\"2039\"", "\"2040\"", "\"2041\"", "\"2042\"", "\"2043\"", "\"2044\"", "\"2045\"", "\"2046\"", "\"2047\"", "\"2048\"", "\"2049\"", "\"2050\"})" }));
        year1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                year1ActionPerformed(evt);
            }
        });

        day2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        month2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        year2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "\"1900\"", "\"1901\"", "\"1902\"", "\"1903\"", "\"1904\"", "\"1905\"", "\"1906\"", "\"1907\"", "\"1908\"", "\"1909\"", "\"1910\"", "\"1911\"", "\"1912\"", "\"1913\"", "\"1914\"", "\"1915\"", "\"1916\"", "\"1917\"", "\"1918\"", "\"1919\"", "\"1920\"", "\"1921\"", "\"1922\"", "\"1923\"", "\"1924\"", "\"1925\"", "\"1926\"", "\"1927\"", "\"1928\"", "\"1929\"", "\"1930\"", "\"1931\"", "\"1932\"", "\"1933\"", "\"1934\"", "\"1935\"", "\"1936\"", "\"1937\"", "\"1938\"", "\"1939\"", "\"1940\"", "\"1941\"", "\"1942\"", "\"1943\"", "\"1944\"", "\"1945\"", "\"1946\"", "\"1947\"", "\"1948\"", "\"1949\"", "\"1950\"", "\"1951\"", "\"1952\"", "\"1953\"", "\"1954\"", "\"1955\"", "\"1956\"", "\"1957\"", "\"1958\"", "\"1959\"", "\"1960\"", "\"1961\"", "\"1962\"", "\"1963\"", "\"1964\"", "\"1965\"", "\"1966\"", "\"1967\"", "\"1968\"", "\"1969\"", "\"1970\"", "\"1971\"", "\"1972\"", "\"1973\"", "\"1974\"", "\"1975\"", "\"1976\"", "\"1977\"", "\"1978\"", "\"1979\"", "\"1980\"", "\"1981\"", "\"1982\"", "\"1983\"", "\"1984\"", "\"1985\"", "\"1986\"", "\"1987\"", "\"1988\"", "\"1989\"", "\"1990\"", "\"1991\"", "\"1992\"", "\"1993\"", "\"1994\"", "\"1995\"", "\"1996\"", "\"1997\"", "\"1998\"", "\"1999\"", "\"2000\"", "\"2001\"", "\"2002\"", "\"2003\"", "\"2004\"", "\"2005\"", "\"2006\"", "\"2007\"", "\"2008\"", "\"2009\"", "\"2010\"", "\"2011\"", "\"2012\"", "\"2013\"", "\"2014\"", "\"2015\"", "\"2016\"", "\"2017\"", "\"2018\"", "\"2019\"", "\"2020\"", "\"2021\"", "\"2022\"", "\"2023\"", "\"2024\"", "\"2025\"", "\"2026\"", "\"2027\"", "\"2028\"", "\"2029\"", "\"2030\"", "\"2031\"", "\"2032\"", "\"2033\"", "\"2034\"", "\"2035\"", "\"2036\"", "\"2037\"", "\"2038\"", "\"2039\"", "\"2040\"", "\"2041\"", "\"2042\"", "\"2043\"", "\"2044\"", "\"2045\"", "\"2046\"", "\"2047\"", "\"2048\"", "\"2049\"", "\"2050\"})" }));

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jLabel9.setText(" BloodGroup");

        bloodgroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "O+", "O-", "A+", "A-", "B+", "B-", "AB+", "AB-" }));

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(day1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(month1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(year1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bloodgroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(236, 289, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancel)
                        .addGap(66, 66, 66)
                        .addComponent(save)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(day2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(month2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(year2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloodgroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(day1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(month1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(day2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(month2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(163, 163, 163)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(save)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayActionPerformed

    private void year1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_year1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_year1ActionPerformed
public int setWard(String name,String gender){
    int m=0;
    String bed="";
    String status="Available";
    String sql="SELECT * FROM ward WHERE gender='"+gender+"' and status='"+status+"' LIMIT 1";
    Database.DB.open();
        try {
            Database.DB.connection.setAutoCommit(false);
            ResultSet rs=Database.DB.statement.executeQuery(sql);
            if(rs==null)
                throw new NullPointerException();
            if(rs.next()){
            m=Integer.parseInt(rs.getString("room_no"));
            String bed1=rs.getString("bed1");
            String bed2=rs.getString("bed2");
            String bed3=rs.getString("bed3");
            String bed4=rs.getString("bed4");
            if(rs.getString("bed1")==null){
                bed="bed1";
                if(rs.getString("bed2")!=null && rs.getString("bed3")!=null && rs.getString("bed4")!=null){
                    status="Not Available";
                }
                Database.DB.statement.executeUpdate("UPDATE ward SET "+bed+"='"+name+"',status='"+status+"' WHERE room_no='"+m+"'");
            } else if(rs.getString("bed2")==null){
                bed="bed2";
                if(rs.getString("bed1")!=null && rs.getString("bed3")!=null && rs.getString("bed4")!=null){
                    status="Not Available";
                }
                Database.DB.statement.executeUpdate("UPDATE ward SET "+bed+"='"+name+"',status='"+status+"' WHERE room_no='"+m+"'");
            } else if(rs.getString("bed3")==null){
                bed="bed3";
                 if(rs.getString("bed1")!=null && rs.getString("bed2")!=null && rs.getString("bed4")!=null){
                    status="Not Available";
                }
                Database.DB.statement.executeUpdate("UPDATE ward SET "+bed+"='"+name+"',status='"+status+"' WHERE room_no='"+m+"'");
            } else if(rs.getString("bed4")==null){
                bed="bed4";
                 if(rs.getString("bed1")!=null && rs.getString("bed2")!=null && rs.getString("bed3")!=null){
                    status="Not Available";
                }
                Database.DB.statement.executeUpdate("UPDATE ward SET "+bed+"='"+name+"',status='"+status+"' WHERE room_no='"+m+"'");
            }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
            Logger.getLogger(AddPatient.class.getName()).log(Level.SEVERE, null, ex);
            m=0;
        } catch (NullPointerException ex) {
            ex.printStackTrace();
            m=0;
            JOptionPane.showMessageDialog(this,"NO WARDS AVAILABLE","ERROR",JOptionPane.ERROR_MESSAGE);
        }
    return m;
}
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        String name=this.name.getText(),address=this.address.getText();
        String gender=(String)this.gender.getSelectedItem(),bloodgroup=(String)this.bloodgroup.getSelectedItem();
        String day=(String)this.day.getSelectedItem(),month=(String)this.month.getSelectedItem(),year=(String)this.year.getSelectedItem();
        String day1=(String)this.day1.getSelectedItem(),month1=(String)this.month1.getSelectedItem(),year1=(String)this.year1.getSelectedItem();
        String day2=(String)this.day2.getSelectedItem(),month2=(String)this.month2.getSelectedItem(),year2=(String)this.year2.getSelectedItem();
        String dob=year+"-"+month+"-"+day,doa=year1+"-"+month1+"-"+day1,dod=year2+"-"+month2+"-"+day2;int roomno=setWard(name,gender);
    String sql ="INSERT INTO patient (`patient_name`,`date_of_birth`,`gender`,`blood_group`,`address`,`date_of_addmission`,`date_of_discharge`,`room_no`)"
            + " VALUES('"+name+"','"+dob+"','"+gender+"','"+bloodgroup+"','"+address+"','"+doa+"','"+dod+"','"+roomno+"')";
        try {
            if(roomno==0)
                throw new SQLException();
            Database.DB.statement.execute(sql);
            Database.DB.connection.commit();
            JOptionPane.showMessageDialog(this, "patient record added sucessfully", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_saveActionPerformed

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearActionPerformed

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthActionPerformed

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
       System.out.println("Goodbye");
dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddPatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JComboBox<String> bloodgroup;
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox<String> day;
    private javax.swing.JComboBox<String> day1;
    private javax.swing.JComboBox<String> day2;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JComboBox<String> month1;
    private javax.swing.JComboBox<String> month2;
    private javax.swing.JTextField name;
    private javax.swing.JButton save;
    private javax.swing.JComboBox<String> year;
    private javax.swing.JComboBox<String> year1;
    private javax.swing.JComboBox<String> year2;
    // End of variables declaration//GEN-END:variables
}
